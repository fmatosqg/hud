apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "kotlin-allopen"
allOpen {
    annotation("com.fmatos.samples.hud.testability.Mockable")
}

apply from: 'secrets.gradle' // see README for instructions

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "com.fmatos.samples.hud"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 8
        versionName "1.0.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            storeFile file("amazing-hud-key.keystore")
            storePassword secret.storePassword

            keyAlias "AmazingHud"
            keyPassword secret.keyPassword
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-deb"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }

    flavorDimensions "platform"

    productFlavors {
        phone {
            dimension "platform"
        }

        rpi3 {
            dimension "platform"
        }
    }
}

dependencies {

    def supportLibraryVersion = '28.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1")

    // android x
    implementation("androidx.constraintlayout:constraintlayout:2.0.0-alpha3")


    // live data and data binding
    def lifecycleVersion = "2.2.0-alpha03"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion")
    implementation("androidx.lifecycle:lifecycle-extensions:$lifecycleVersion")
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion")
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycleVersion")
    kapt("com.android.databinding:compiler:3.1.4")


    // other
    implementation("com.squareup.picasso:picasso:2.71828")
    implementation("com.jakewharton.timber:timber:4.7.1")
    implementation 'joda-time:joda-time:2.9.9'

    // dependency injection
    def koinVersion = "1.0.2"
    implementation("org.koin:koin-androidx-scope:$koinVersion")
    implementation("org.koin:koin-androidx-viewmodel:$koinVersion")

    // network
    def retrofitVersion = '2.3.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // android things
    rpi3CompileOnly 'com.google.android.things:androidthings:1.0'

    ///////////////////////////////
    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'org.robolectric:robolectric:3.3.2'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}


