apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "kotlin-allopen"
allOpen {
    annotation("com.fmatos.samples.hud.testability.Mockable")
}

apply from: 'secrets.gradle' // see README for instructions

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.fmatos.samples.hud"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("amazing-hud-key.keystore")
            storePassword secret.storePassword

            keyAlias "AmazingHud"
            keyPassword secret.keyPassword
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }

    flavorDimensions "platform"

    productFlavors {
        phone {
            dimension "platform"
        }

        rpi3 {
            dimension "platform"
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}


dependencies {

    def supportLibraryVersion = '26.0.2'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"

    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'joda-time:joda-time:2.9.9'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'io.reactivex:rxkotlin:2.0.0-RC1'

    def retrofitVersion = '2.2.0'
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    def daggerVersion = '2.11'
    compile "com.google.dagger:dagger-android:$daggerVersion"
    compile "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt ("com.google.dagger:dagger-compiler:$daggerVersion"){
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }

//    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
//    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"


    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile 'org.robolectric:robolectric:3.3.2'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}


