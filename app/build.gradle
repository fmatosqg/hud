apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "kotlin-allopen"
allOpen {
    annotation("com.fmatos.samples.hud.testability.Mockable")
}


android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.fmatos.samples.hud"
        minSdkVersion 24
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
}

dependencies {

    def supportLibraryVersion = '25.3.1'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'joda-time:joda-time:2.9.9'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'io.reactivex:rxkotlin:2.0.0-RC1'

    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'

    def daggerVersion = '2.11'
    compile "com.google.dagger:dagger-android:$daggerVersion"
    compile "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile 'org.robolectric:robolectric:3.3.2'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

task bundle(type: Zip, dependsOn: assemble) {
   from 'build/outputs/apk/debug/'
   include 'app-debug.apk'

   from '../bundle/animations'
   include 'bootanimation.zip'

   def folder='build/outputs/bundle'
   archiveName 'bundle.zip'
   destinationDir(file(folder))

   println "File generated on app/${folder}/${archiveName}"
}